/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MusicRetailManagement;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;

/**
 * This Receipt class displays an up-to-the-minute report of all songs
 * retailed and their respective tracking details.
 * @id 47402017
 *
 */
public class Receipt extends javax.swing.JDialog {

    /**
     * Creates new form Receipt
     */
    public Receipt(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fetchReceiptsFromDatabase();
    }

    /**
     * This method initializes the database connection and connects the
     * application to the database to display accurate records of songs retailed
     * and their details.
     *
     * @throws Exception
     */
    public void fetchReceiptsFromDatabase() {
        RetailerLogin reestablishConnection = new RetailerLogin();
        reestablishConnection.initialize();
        System.out.println("DONE!!!");
        try {
            PreparedStatement p = reestablishConnection.conn.prepareStatement("SELECT id,song_title,artist_Name"
                    + ",time_Sold,price_in_cedis,customer_Device as 'Destination History' "
                    + "FROM musicretail.songtracking");

            ResultSet result = p.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(result));
            jTable1.setAutoCreateRowSorter(true);

        } catch (Exception e) {
            System.out.println("Error" + e.toString());
            return;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonPrintReport = new javax.swing.JButton();
        jButtonCalculateTotalEarnings = new javax.swing.JButton();
        jButtonTotalNumbersOfSongsRetailed = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(3).setMinWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1140, 220));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 110, 30));

        jButtonPrintReport.setText("PRINT REPORT");
        jButtonPrintReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintReportActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPrintReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 130, 40));

        jButtonCalculateTotalEarnings.setText("Calculate Total Earnings");
        jButtonCalculateTotalEarnings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculateTotalEarningsActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCalculateTotalEarnings, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 170, 40));

        jButtonTotalNumbersOfSongsRetailed.setText("Total Number of Songs Retailed");
        jButtonTotalNumbersOfSongsRetailed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTotalNumbersOfSongsRetailedActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonTotalNumbersOfSongsRetailed, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 190, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 330, 100, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UP-TO-THE-MINUTE RECEIPT REPORTS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 480, 20));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/afd.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents
   /**
     * This method prints the details of songs retailed mainly as pdf .
     */
    private void printToPDF() {
        MessageFormat header = new MessageFormat(" UP-TO-THE-MINUTE RECEIPT REPORTS ");

        try {
            jTable1.print(JTable.PrintMode.NORMAL, header, header);
            jLabel2.print(null);
            jLabel3.print(null);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }

    /**
     * This method calls the method that prints the details of songs retailed
     *
     */
    private void jButtonPrintReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintReportActionPerformed
        printToPDF();
    }//GEN-LAST:event_jButtonPrintReportActionPerformed

    /**
     * This method initializes the database connection or connects the
     * application to the database to help calculate the total amount of money
     * earned from the sale of music
     *
     * @throws Exception
     */
    private void jButtonCalculateTotalEarningsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculateTotalEarningsActionPerformed
        // TODO add your handling code here:
        RetailerLogin reestablishConnection = new RetailerLogin();
        reestablishConnection.initialize();

        System.out.println("DONE!!!");
        try {
            PreparedStatement p = reestablishConnection.conn.prepareStatement("SELECT SUM(price_in_cedis)"
                    + " FROM  musicretail.songtracking ");

            ResultSet result = p.executeQuery();

            if (result.next()) {
                String foundType = result.getString(1);
                jLabel2.setText("Â¢" + result.getString(1));
                System.out.println(result.getString(1));
            }

        } catch (Exception e) {
            System.out.println("Error" + e.toString());
            return;
        }
    }//GEN-LAST:event_jButtonCalculateTotalEarningsActionPerformed

    /**
     * This method initializes the database connection or connects the
     * application to the database to help calculate the total number of songs
     * retailed
     *
     * @throws Exception
     */
    private void jButtonTotalNumbersOfSongsRetailedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTotalNumbersOfSongsRetailedActionPerformed
        RetailerLogin reestablishConnection = new RetailerLogin();
        reestablishConnection.initialize();

        System.out.println("DONE!!!");
        try {
            PreparedStatement p = reestablishConnection.conn.prepareStatement("SELECT count(id)"
                    + " FROM  musicretail.songtracking ");

            ResultSet result = p.executeQuery();

            if (result.next()) {
                String foundType = result.getString(1);
                jLabel3.setText(result.getString(1) + " song(s)");
                System.out.println(result.getString(1));
            }

        } catch (Exception e) {
            System.out.println("Error" + e.toString());
            return;
        }
    }//GEN-LAST:event_jButtonTotalNumbersOfSongsRetailedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Receipt dialog = new Receipt(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalculateTotalEarnings;
    private javax.swing.JButton jButtonPrintReport;
    private javax.swing.JButton jButtonTotalNumbersOfSongsRetailed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
